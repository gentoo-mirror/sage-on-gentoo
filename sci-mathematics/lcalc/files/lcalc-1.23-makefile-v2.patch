diff --git a/src/Makefile b/src/Makefile
index 84e4e88..bda72dd 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -29,10 +29,12 @@ endif
 
 OS_NAME := $(shell uname)
 
-CC = g++
+#CC = g++
 #cc = /home/mrubinst/local/bin/gcc
 #CC = /home/mrubinst/local/bin/g++
 #LD = /home/mrubinst/local/bin/g++
+CC ?= gcc
+CXX ?= g++
 
 #CC = /Users/michaelrubinstein/math/L/packages/gcc4.3/usr/local/bin/g++
 #EXTRA= -pg
@@ -58,9 +60,10 @@ ifeq ($(G5),TRUE)
    #MACHINE_SPECIFIC_FLAGS = -mpowerpc -mpowerpc64 -m64
 endif
 
-CCFLAGS =  -Wa,-W -O3 $(OPENMP_FLAG) -Wno-deprecated $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
+#CCFLAGS =  -Wa,-W -O3 $(OPENMP_FLAG) -Wno-deprecated $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
 #CCFLAGS =  -Wa,-W -O3 $(OPENMP_FLAG)  $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
 #CCFLAGS =  -Wa,-W -O2 -fno-exceptions -Wno-deprecated $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS) $(EXTRA)
+MYCXXFLAGS = $(CXXFLAGS) $(OPENMP_FLAG) $(PREPROCESSOR_DEFINE) $(MACHINE_SPECIFIC_FLAGS)
 
 #warning- O2 doesn't help with -DUSE_LONG_DOUBLE on mac, and actually seems to hurt, making runtime longer
 #by a factor of 1.5
@@ -89,24 +92,24 @@ INCLUDEFILES= -I../include
 
 ifeq ($(OS_NAME),Darwin)
     LDFLAGS2 =
-    DYN_OPTION=dynamiclib
+    DYN_OPTION=-dynamiclib
 else
-    LDFLAGS1 = -Xlinker -export-dynamic #not sure why pari calls these when linking but on the web I found
+    LDFLAGS1 = #not sure why pari calls these when linking but on the web I found
     #'Libtool provides the `-export-dynamic' link flag (see section Link mode), which does this declaration.
     #You need to use this flag if you are linking a shared library that will be dlopened'
     #see notes below
     #ifeq ($(PARI_DEFINE),-DINCLUDE_PARI)
-       LDFLAGS2 = $(LDFLAGS1) -Xlinker -rpath -Xlinker $(LOCATION_PARI_LIBRARY)
+       LDFLAGS2 = $(LDFLAGS)
     #else
     #    LDFLAGS2 = $(LDFLAGS1)
     #endif
-    DYN_OPTION=shared
+    DYN_OPTION=-shared -Wl,-soname,libLfunction.so
 endif
 
 ifeq ($(PARI_DEFINE),-DINCLUDE_PARI)
-    LDFLAGS = $(LDFLAGS2) -L$(LOCATION_PARI_LIBRARY) -lpari
+    MYLDFLAGS = $(LDFLAGS2) -lpari
 else
-    LDFLAGS = $(LDFLAGS2)
+    MYLDFLAGS = $(LDFLAGS2)
 endif
 
 
@@ -129,7 +132,8 @@ endif
 #become clear which libraries the computer can find.
 
 
-INSTALL_DIR= /usr/local
+INSTALL_DIR= $(DESTDIR)
+LIB_DIR ?=lib
 
 #object files for the libLfunction library
 OBJ_L = Lglobals.o Lgamma.o Lriemannsiegel.o Lriemannsiegel_blfi.o Ldokchitser.o
@@ -141,9 +145,8 @@ OBJECTS = $(OBJ3)
 
 all:
 #	make print_vars
-	make libLfunction.so
-	make lcalc
-	make examples
+	${MAKE} libLfunction.so
+	${MAKE} lcalc
 #	make find_L
 #	make test
 
@@ -151,7 +154,7 @@ print_vars:
 	@echo OS_NAME = $(OS_NAME)
 
 lcalc: $(OBJECTS)
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) $(OBJECTS) $(LDFLAGS) -o lcalc $(GMP_FLAGS)
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) $(OBJECTS) $(MYLDFLAGS) -o lcalc $(GMP_FLAGS)
 
 examples:
 	$(CC) $(CCFLAGS) $(INCLUDEFILES) example_programs/example.cc libLfunction.so -o example_programs/example $(GMP_FLAGS)
@@ -161,15 +164,15 @@ proc:
 	$(CC) $(CCFLAGS) $(INCLUDEFILES) example_programs/proc.cc libLfunction.so -o example_programs/proc $(GMP_FLAGS)
 
 test:
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) example_programs/test.cc libLfunction.so -o example_programs/test $(GMP_FLAGS)
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) example_programs/test.cc libLfunction.so $(MYLDFLAGS) -o example_programs/test $(GMP_FLAGS)
 
 find_L:
 	$(CC) $(CCFLAGS) $(INCLUDEFILES) find_L_functions/find_L_functions.cc libLfunction.so -o find_L_functions/find_L $(GMP_FLAGS)
 
 .cc.o:
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) -c $<
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) -c $<
 .c.o:
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) -c $<
+	$(CC) $(CFLAGS) $(INCLUDEFILES) -c $<
 
 
 Lglobals.o: ../include/Lglobals.h ../include/Lcommon.h ../include/Lcomplex.h ../include/Lnumeric.h ../include/Lint_complex.h
@@ -227,7 +230,7 @@ Lcommandline_elliptic.o: ../include/Lnumberzeros.h ../include/Lgram.h
 Lcommandline_elliptic.o: ../include/Lvalue.h ../include/Lfind_zeros.h
 Lcommandline_elliptic.o: ../include/Lcommandline_numbertheory.h
 Lcommandline_elliptic.o: ../include/Lcommandline_globals.h
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) -I$(LOCATION_PARI_H) $(PARI_DEFINE) -c Lcommandline_elliptic.cc
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) $(PARI_DEFINE) -c Lcommandline_elliptic.cc
 
 Lcommandline_twist.o: ../include/Lcommandline_twist.h ../include/L.h
 Lcommandline_twist.o: ../include/Lglobals.h ../include/Lcommon.h ../include/Lcomplex.h ../include/Lnumeric.h ../include/Lint_complex.h
@@ -239,7 +242,7 @@ Lcommandline_twist.o: ../include/Lvalue.h ../include/Lfind_zeros.h
 Lcommandline_twist.o: ../include/Lcommandline_numbertheory.h
 Lcommandline_twist.o: ../include/Lcommandline_globals.h
 Lcommandline_twist.o: ../include/Lcommandline_elliptic.h
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) -I$(LOCATION_PARI_H) $(PARI_DEFINE) -c Lcommandline_twist.cc
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) $(PARI_DEFINE) -c Lcommandline_twist.cc
 
 cmdline.o: ../include/cmdline.h ../include/getopt.h
 #$(CC) $(CCFLAGS) $(INCLUDEFILES) -DHAVE_LONG_LONG -c cmdline.c
@@ -258,21 +261,24 @@ Lcommandline.o: ../include/Lcommandline_misc.h
 Lcommandline.o: ../include/Lcommandline_elliptic.h
 Lcommandline.o: ../include/Lcommandline_twist.h
 Lcommandline.o: ../include/Lcommandline_values_zeros.h
-	$(CC) $(CCFLAGS) $(INCLUDEFILES) -I$(LOCATION_PARI_H) $(PARI_DEFINE) -c Lcommandline.cc
+	$(CXX) $(MYCXXFLAGS) $(INCLUDEFILES) $(PARI_DEFINE) -c Lcommandline.cc
 
 
 libLfunction.so: $(OBJ_L)
-	g++ -$(DYN_OPTION)  -o libLfunction.so $(OBJ_L)
+	$(CXX) $(DYN_OPTION) $(MYCXXFLAGS) -o libLfunction.so $(MYLDFLAGS) $(OBJ_L)
 
 clean:
 	rm -f *.o lcalc libLfunction.so example_programs/example
 
 install:
-	cp -f lcalc $(INSTALL_DIR)/bin/.
-	cp -f libLfunction.so $(INSTALL_DIR)/lib/.
-	cp -rf ../include $(INSTALL_DIR)/include/Lfunction
+	install -d $(INSTALL_DIR)/bin
+	install -d $(INSTALL_DIR)/$(LIB_DIR)
+	install -d $(INSTALL_DIR)/include/Lfunction
+	install lcalc $(INSTALL_DIR)/bin
+	install libLfunction.so $(INSTALL_DIR)/$(LIB_DIR)
+	install -m 644 -t $(INSTALL_DIR)/include/Lfunction ../include/*.h
 
 
 SRCS = Lcommandline.cc Lcommandline_elliptic.cc Lcommandline_globals.cc Lcommandline_misc.cc Lcommandline_numbertheory.cc Lcommandline_twist.cc Lcommandline_values_zeros.cc Lgamma.cc Lglobals.cc Lmisc.cc Lriemannsiegel.cc Lriemannsiegel_blfi.cc cmdline.c
 depend:
-	makedepend -f depends -- $(CCFLAGS) -Y../include -- $(SRCS)
+	makedepend -f depends -- $(MYCXXFLAGS) -Y../include -- $(SRCS)
