diff --git a/src/doc/Makefile b/src/doc/Makefile
index 90bea5dfac..48b7f3097e 100644
--- a/src/doc/Makefile
+++ b/src/doc/Makefile
@@ -17,31 +17,26 @@ clean:
 
 # Matches doc-inventory--reference-manifolds etc.
 doc-inventory--%:
-	cd $(SAGE_ROOT) && ./sage --docbuild --no-pdf-links $(subst -,/,$(subst doc-inventory--,,$@)) inventory $(SAGE_DOCBUILD_OPTS)
+	$(PYTHON) -m sage_docbuild --no-pdf-links $(subst -,/,$(subst doc-inventory--,,$@)) inventory $(SAGE_DOCBUILD_OPTS)
 
 # Matches doc-html--developer, doc-html--reference-manifolds etc.
 doc-html--%:
-	cd $(SAGE_ROOT) && ./sage --docbuild --no-pdf-links $(subst -,/,$(subst doc-html--,,$@)) html $(SAGE_DOCBUILD_OPTS)
+	$(PYTHON) -m sage_docbuild --no-pdf-links $(subst -,/,$(subst doc-html--,,$@)) html $(SAGE_DOCBUILD_OPTS)
 
 # reference manual, inventory
-ifndef SAGE_ROOT
 doc-inventory-reference:
-	$(error SAGE_ROOT undefined. This Makefile needs to be invoked by build/make/install)
-else
-doc-inventory-reference:
-	$(eval DOCS = $(shell cd $(SAGE_ROOT) && ./sage --docbuild --all-documents reference))
-	@if [ -z "$(DOCS)" ]; then echo "Error: './sage --docbuild --all-documents' failed"; exit 1; fi
+	$(eval DOCS = $(shell $(PYTHON) -m sage_docbuild --all-documents reference))
+	@if [ -z "$(DOCS)" ]; then echo "Error: '$(PYTHON) -m sage_docbuild --all-documents' failed"; exit 1; fi
 	$(eval BIBLIO = $(firstword $(DOCS)))
 	$(eval OTHER_DOCS = $(wordlist 2, 100, $(DOCS)))
 	$(MAKE) doc-inventory--$(subst /,-,$(BIBLIO))
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" $(foreach doc, $(OTHER_DOCS), doc-inventory--$(subst /,-,$(doc)))
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" doc-inventory--reference_top
-endif
 
 # reference manual, html
 doc-html-reference: doc-inventory-reference
-	$(eval DOCS = $(shell cd $(SAGE_ROOT) && ./sage --docbuild --all-documents reference))
-	@if [ -z "$(DOCS)" ]; then echo "Error: './sage --docbuild --all-documents' failed"; exit 1; fi
+	$(eval DOCS = $(shell $(PYTHON) -m sage_docbuild --all-documents reference))
+	@if [ -z "$(DOCS)" ]; then echo "Error: '$(PYTHON) -m sage_docbuild --all-documents' failed"; exit 1; fi
 	$(eval BIBLIO = $(firstword $(DOCS)))
 	$(eval OTHER_DOCS = $(wordlist 2, 100, $(DOCS)))
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" doc-html--$(subst /,-,$(BIBLIO))
@@ -50,20 +45,20 @@ doc-html-reference: doc-inventory-reference
 
 # other documentation, html
 doc-html-other: doc-html-reference
-	$(eval DOCS = $(shell cd $(SAGE_ROOT) && ./sage --docbuild --all-documents all))
-	@if [ -z "$(DOCS)" ]; then echo "Error: './sage --docbuild --all-documents' failed"; exit 1; fi
+	$(eval DOCS = $(shell $(PYTHON) -m sage_docbuild --all-documents all))
+	@if [ -z "$(DOCS)" ]; then echo "Error: '$(PYTHON) -m sage_docbuild --all-documents' failed"; exit 1; fi
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" $(foreach doc, $(wordlist 2, 100, $(DOCS)), doc-html--$(subst /,-,$(doc)))
 
 doc-html: doc-html-reference doc-html-other
 
 # Matches doc-pdf--developer, doc-pdf--reference-manifolds etc.
 doc-pdf--%:
-	cd $(SAGE_ROOT) && ./sage --docbuild $(subst -,/,$(subst doc-pdf--,,$@)) pdf $(SAGE_DOCBUILD_OPTS)
+	MAKE=$(MAKE) $(PYTHON) -m sage_docbuild $(subst -,/,$(subst doc-pdf--,,$@)) pdf $(SAGE_DOCBUILD_OPTS)
 
 # reference manual, pdf
-doc-pdf-reference: doc-inventory-reference
-	$(eval DOCS = $(shell cd $(SAGE_ROOT) && ./sage --docbuild --all-documents reference))
-	@if [ -z "$(DOCS)" ]; then echo "Error: './sage --docbuild --all-documents' failed"; exit 1; fi
+doc-pdf-reference:
+	$(eval DOCS = $(shell $(PYTHON) -m sage_docbuild --all-documents reference))
+	@if [ -z "$(DOCS)" ]; then echo "Error: '$(PYTHON) -m sage_docbuild --all-documents' failed"; exit 1; fi
 	$(eval BIBLIO = $(firstword $(DOCS)))
 	$(eval OTHER_DOCS = $(wordlist 2, 100, $(DOCS)))
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" doc-pdf--$(subst /,-,$(BIBLIO))
@@ -71,14 +66,14 @@ doc-pdf-reference: doc-inventory-reference
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" doc-pdf--reference_top
 
 # other documentation, pdf
-doc-pdf-other: doc-html-reference
-	$(eval DOCS = $(shell cd $(SAGE_ROOT) && ./sage --docbuild --all-documents all))
-	@if [ -z "$(DOCS)" ]; then echo "Error: './sage --docbuild --all-documents' failed"; exit 1; fi
+doc-pdf-other:
+	$(eval DOCS = $(shell $(PYTHON) -m sage_docbuild --all-documents all))
+	@if [ -z "$(DOCS)" ]; then echo "Error: '$(PYTHON) -m sage_docbuild --all-documents' failed"; exit 1; fi
 	$(MAKE) SAGE_DOCBUILD_OPTS="$(SAGE_DOCBUILD_OPTS) --no-prune-empty-dirs" $(foreach doc, $(wordlist 2, 100, $(DOCS)), doc-pdf--$(subst /,-,$(doc)))
 
 # website with pdf links
 doc-pdf-website:
-	cd $(SAGE_ROOT) && ./sage --docbuild website html $(SAGE_DOCBUILD_OPTS)
+	$(PYTHON) -m sage_docbuild website html $(SAGE_DOCBUILD_OPTS)
 
 doc-pdf: doc-pdf-reference doc-pdf-other doc-pdf-website
 
