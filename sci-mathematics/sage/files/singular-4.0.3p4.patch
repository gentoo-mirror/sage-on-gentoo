diff --git a/sage/interfaces/singular.py b/sage/interfaces/singular.py
index 0887e0c..4931658 100644
--- a/sage/interfaces/singular.py
+++ b/sage/interfaces/singular.py
@@ -1086,7 +1086,7 @@ class Singular(ExtraTabCompletion, Expect):
             //        block   2 : ordering C
             sage: singular.set_ring(R)
             sage: singular.current_ring()
-            polynomial ring, over a field, local/mixed ordering
+            polynomial ring, over a field, local ordering
             //   characteristic : 7
             //   number of vars : 2
             //        block   1 : ordering ds
@@ -1995,7 +1995,7 @@ class SingularElement(ExtraTabCompletion, ExpectElement):
             //        block   2 : ordering C
             sage: R.set_ring()
             sage: singular.current_ring()
-            polynomial ring, over a field, local/mixed ordering
+            polynomial ring, over a field, local ordering
             //   characteristic : 7
             //   number of vars : 2
             //        block   1 : ordering ds
diff --git a/sage/libs/singular/decl.pxd b/sage/libs/singular/decl.pxd
index 8235e9d..4afc0cc 100644
--- a/sage/libs/singular/decl.pxd
+++ b/sage/libs/singular/decl.pxd
@@ -235,7 +235,10 @@ cdef extern from "singular/Singular/libsingular.h":
         long (*pFDeg)(poly *p, ring *r)
         long (*pFDegOrig)(poly *p, ring *r)
 
+    # a bunch of functions for degree
 
+    long p_FDeg(poly *p, ring *r)
+    long p_LDeg(poly *p, int *l, ring *r)
     long p_Deg(poly *p, ring *r)    
     long p_WTotaldegree(poly *p, ring *r)
     long p_Totaldegree(poly *p, ring *r)
diff --git a/sage/libs/singular/function.pyx b/sage/libs/singular/function.pyx
index 9265099..8f191f2 100644
--- a/sage/libs/singular/function.pyx
+++ b/sage/libs/singular/function.pyx
@@ -1118,7 +1118,7 @@ cdef class KernelCallHandler(BaseCallHandler):
                 arg1 = argument_list.pop_front()
                 if _ring != currRing: rChangeCurrRing(_ring)
                 iiExprArith1(res, arg1, self.cmd_n)
-                free_leftv(arg1)
+                free_leftv(arg1, _ring)
                 return res
 
         elif number_of_arguments == 2:
@@ -1127,8 +1127,8 @@ cdef class KernelCallHandler(BaseCallHandler):
                 arg2 = argument_list.pop_front()
                 if _ring != currRing: rChangeCurrRing(_ring)
                 iiExprArith2(res, arg1, self.cmd_n, arg2, True)
-                free_leftv(arg1)
-                free_leftv(arg2)
+                free_leftv(arg1, _ring)
+                free_leftv(arg2, _ring)
                 return res
 
         elif number_of_arguments == 3:
@@ -1138,9 +1138,9 @@ cdef class KernelCallHandler(BaseCallHandler):
                 arg3 = argument_list.pop_front()
                 if _ring != currRing: rChangeCurrRing(_ring)
                 iiExprArith3(res, self.cmd_n, arg1, arg2, arg3)
-                free_leftv(arg1)
-                free_leftv(arg2)
-                free_leftv(arg3)
+                free_leftv(arg1, _ring)
+                free_leftv(arg2, _ring)
+                free_leftv(arg3, _ring)
                 return res
 
         global errorreported
diff --git a/sage/libs/singular/polynomial.pyx b/sage/libs/singular/polynomial.pyx
index e243fae..83b5104 100644
--- a/sage/libs/singular/polynomial.pyx
+++ b/sage/libs/singular/polynomial.pyx
@@ -22,7 +22,7 @@ plusminus_pattern = re.compile("([^\(^])([\+\-])")
 from sage.libs.singular.decl cimport number, ideal
 from sage.libs.singular.decl cimport currRing, rChangeCurrRing
 from sage.libs.singular.decl cimport p_Copy, p_Add_q, p_Neg, pp_Mult_nn, p_GetCoeff, p_IsConstant, p_Cmp, pNext
-from sage.libs.singular.decl cimport p_GetMaxExp, pp_Mult_qq, pPower, p_String, p_GetExp, p_Deg, p_Totaldegree, p_WTotaldegree, p_WDegree
+from sage.libs.singular.decl cimport p_GetMaxExp, pp_Mult_qq, pPower, p_String, p_GetExp, p_Deg, p_Totaldegree, p_WTotaldegree, p_WDegree, p_LDeg, p_FDeg
 from sage.libs.singular.decl cimport n_Delete, idInit, fast_map_common_subexp, id_Delete
 from sage.libs.singular.decl cimport omAlloc0, omStrDup, omFree
 from sage.libs.singular.decl cimport p_GetComp, p_SetComp
@@ -525,15 +525,16 @@ cdef object singular_polynomial_str_with_changed_varnames(poly *p, ring *r, obje
 cdef long singular_polynomial_deg(poly *p, poly *x, ring *r):
     cdef int  i
     cdef long _deg, deg
-    
+
     deg = -1
     _deg = -1 
     if p == NULL:
         return -1
     if(r != currRing): rChangeCurrRing(r)
     if x == NULL:
+        #return p_Deg(p, r)
         while p:  
-            _deg = p_WTotaldegree(p,r)
+            _deg = p_WDegree(p,r)
           
             if _deg > deg:
                 deg = _deg
