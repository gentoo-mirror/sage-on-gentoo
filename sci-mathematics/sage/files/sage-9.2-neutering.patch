diff --git a/doc/en/reference/misc/index.rst b/doc/en/reference/misc/index.rst
index 9a7702b..4639d03 100644
--- a/doc/en/reference/misc/index.rst
+++ b/doc/en/reference/misc/index.rst
@@ -226,8 +226,6 @@ Distribution
 .. toctree::
    :maxdepth: 1
 
-   sage/misc/package
-   sage/misc/dist
    sage/features
    sage/features/bliss
    sage/features/csdp
diff --git a/sage/doctest/control.py b/sage/doctest/control.py
index cd5ab59..c7d2c6c 100644
--- a/sage/doctest/control.py
+++ b/sage/doctest/control.py
@@ -351,17 +351,6 @@ class DocTestController(SageObject):
                 # Special case to run all optional tests
                 options.optional = True
             else:
-                # We replace the 'optional' tag by all optional
-                # packages for which the installed version matches the
-                # latest available version (this implies in particular
-                # that the package is actually installed).
-                if 'optional' in options.optional:
-                    options.optional.discard('optional')
-                    from sage.misc.package import list_packages
-                    for pkg in list_packages('optional', local=True).values():
-                        if pkg['installed'] and pkg['installed_version'] == pkg['remote_version']:
-                            options.optional.add(pkg['name'])
-
                 # Check that all tags are valid
                 for o in options.optional:
                     if not optionaltag_regex.search(o):
diff --git a/sage/misc/all.py b/sage/misc/all.py
index 46765a0..1eb5772 100644
--- a/sage/misc/all.py
+++ b/sage/misc/all.py
@@ -52,12 +52,6 @@ from .mrange import xmrange, mrange, xmrange_iter, mrange_iter, cartesian_produc
 
 from .fpickle import pickle_function, unpickle_function
 
-from .dist import install_scripts
-
-lazy_import('sage.misc.package', ('installed_packages', 'is_package_installed',
-                                  'standard_packages', 'optional_packages',
-                                  'experimental_packages', 'package_versions'))
-
 lazy_import('sage.misc.pager', 'pager')
 
 lazy_import('sage.misc.sagedoc', ['browse_sage_doc',
diff --git a/sage/tests/cmdline.py b/sage/tests/cmdline.py
index 310e55d..8300371 100644
--- a/sage/tests/cmdline.py
+++ b/sage/tests/cmdline.py
@@ -13,10 +13,7 @@ test.spyx
 --advanced
 -c
 --cython
---dev
 --ecl
---experimental
---fixdoctests
 --gap
 --gdb
 --gp
@@ -29,7 +26,6 @@ test.spyx
 --maxima
 --min
 --mwrank
---optional
 --preparse
 --python
 --python3
@@ -43,7 +39,6 @@ test.spyx
 --sh
 --singular
 --sqlite3
---standard
 --startuptime
 -t
 -v
@@ -413,50 +408,6 @@ def test_executable(args, input="", timeout=100.0, pydebug_ignore_warnings=False
         sage: ret
         1
 
-    Now run a test for the fixdoctests script and, in particular, check that the
-    issues raised in :trac:`10589` are fixed. We have to go to slightly silly
-    lengths to doctest the output.::
-
-        sage: test='r\"\"\"Add a doc-test for the fixdoctest command line option and, in particular, check that\n:trac:`10589` is fixed.\n\nEXAMPLES::\n\n    sage: 1+1              # incorrect output\n    3\n    sage: m=matrix(ZZ,3)   # output when none is expected\n    [0 0 0]\n    [0 0 0]\n    [1 0 0]\n    sage: (2/3)*m          # no output when it is expected\n    sage: mu=PartitionTuple([[4,4],[3,3,2,1],[1,1]])   # output when none is expected\n    [4, 4, 3, 3, 2, 1, 1]\n    sage: mu.pp()          # uneven indentation\n    ****\n    ****\n    sage: PartitionTuples.options(convention="French")\n    sage: mu.pp()         # fix doctest with uneven indentation\n    sage: PartitionTuples.options._reset()\n\"\"\"\n'
-        sage: test_file = os.path.join(tmp_dir(), 'test_file.py')
-        sage: F = open(test_file, 'w')
-        sage: _ = F.write(test)
-        sage: F.close()
-        sage: (out, err, ret) = test_executable(["sage", "--fixdoctests", test_file])
-        sage: with open(test_file, 'r') as f:
-        ....:     fixed_test = f.read()
-        sage: import difflib
-        sage: list(difflib.unified_diff(test.splitlines(), fixed_test.splitlines()))[2:-1]
-        ['@@ -4,18 +4,23 @@\n',
-         ' EXAMPLES::',
-         ' ',
-         '     sage: 1+1              # incorrect output',
-         '-    3',
-         '+    2',
-         '     sage: m=matrix(ZZ,3)   # output when none is expected',
-         '+    sage: (2/3)*m          # no output when it is expected',
-         '     [0 0 0]',
-         '     [0 0 0]',
-         '-    [1 0 0]',
-         '-    sage: (2/3)*m          # no output when it is expected',
-         '+    [0 0 0]',
-         '     sage: mu=PartitionTuple([[4,4],[3,3,2,1],[1,1]])   # output when none is expected',
-         '-    [4, 4, 3, 3, 2, 1, 1]',
-         '     sage: mu.pp()          # uneven indentation',
-         '-    ****',
-         '-    ****',
-         '+       ****   ***   *',
-         '+       ****   ***   *',
-         '+              **',
-         '+              *',
-         '     sage: PartitionTuples.options(convention="French")',
-         '     sage: mu.pp()         # fix doctest with uneven indentation',
-         '+    *',
-         '+    **',
-         '+    ****   ***   *',
-         '+    ****   ***   *',
-         '     sage: PartitionTuples.options._reset()']
-
     Test external programs being called by Sage::
 
         sage: (out, err, ret) = test_executable(["sage", "--sh"], "echo Hello World\nexit 42\n")
@@ -606,32 +557,6 @@ def test_executable(args, input="", timeout=100.0, pydebug_ignore_warnings=False
         sage: ret
         0
 
-    Check some things requiring an internet connection::
-
-        sage: (out, err, ret) = test_executable(["sage", "--standard"])  # optional - internet
-        sage: out.find("cython") >= 0  # optional - internet
-        True
-        sage: err  # optional - internet
-        ''
-        sage: ret  # optional - internet
-        0
-
-        sage: (out, err, ret) = test_executable(["sage", "--optional"])  # optional - internet
-        sage: out.find("database_cremona_ellcurve") >= 0  # optional - internet
-        True
-        sage: err  # optional - internet
-        ''
-        sage: ret  # optional - internet
-        0
-
-        sage: (out, err, ret) = test_executable(["sage", "--experimental"])  # optional - internet
-        sage: out.find("valgrind") >= 0  # optional - internet
-        True
-        sage: err  # optional - internet
-        ''
-        sage: ret  # optional - internet
-        0
-
     Check an illegal command line option.  This outputs an error to stdout,
     but we allow stderr in case this changes in the future::
 
diff --git a/sage_setup/optional_extension.py b/sage_setup/optional_extension.py
index 546191f..dc72b54 100644
--- a/sage_setup/optional_extension.py
+++ b/sage_setup/optional_extension.py
@@ -19,10 +19,7 @@ package which must be installed.
 
 
 from distutils.extension import Extension
-from sage.misc.package import list_packages
-
-all_packages = list_packages(local=True)
-
+import os
 
 class CythonizeExtension(Extension):
     """
@@ -76,14 +73,7 @@ def OptionalExtension(*args, **kwds):
         condition = kwds.pop("condition")
     except KeyError:
         pkg = kwds.pop("package")
-        from sage.misc.package import is_package_installed
-        try:
-            pkginfo = all_packages[pkg]
-        except KeyError:
-            # Might be an installed old-style package
-            condition = is_package_installed(pkg)
-        else:
-            condition = (pkginfo["installed_version"] == pkginfo["remote_version"])
+        condition = os.getenv('WANT_%s'%pkg,False)
 
     if condition:
         return Extension(*args, **kwds)
diff --git a/setup.py b/setup.py
index 4b82e1a..19abde5 100755
--- a/setup.py
+++ b/setup.py
@@ -129,43 +129,19 @@ code = setup(name = 'sage',
                  'bin/sage-valgrind',
                  'bin/sage-version.sh',
                  'bin/sage-cleaner',
-                 ## Only makes sense in sage-the-distribution. TODO: Move to another installation script.
-                 'bin/sage-list-packages',
-                 'bin/sage-clone-source',
-                 'bin/sage-download-upstream',
-                 'bin/sage-sdist',
-                 'bin/sage-location',
                  ## Uncategorized scripts in alphabetical order
                  'bin/math-readline',
-                 'bin/sage-env',
-                 'bin/sage-env-config',
                  # sage-env-config.in -- not to be installed',
                  'bin/sage-gdb-commands',
-                 'bin/sage-grep',
-                 'bin/sage-grepdoc',
-                 'bin/sage-inline-fortran',
                  'bin/sage-ipynb2rst',
                  'bin/sage-ipython',
                  'bin/sage-native-execute',
                  'bin/sage-notebook',
                  'bin/sage-num-threads.py',
-                 'bin/sage-open',
                  'bin/sage-preparse',
-                 'bin/sage-pypkg-location',
-                 'bin/sage-python',
-                 'bin/sage-rebase.bat',
-                 'bin/sage-rebase.sh',
-                 'bin/sage-rebaseall.bat',
-                 'bin/sage-rebaseall.sh',
-                 'bin/sage-rst2sws',
-                 'bin/sage-rst2txt',
                  'bin/sage-run',
                  'bin/sage-run-cython',
                  'bin/sage-startuptime.py',
-                 'bin/sage-sws2rst',
-                 'bin/sage-update-src',
-                 'bin/sage-update-version',
-                 'bin/sage-upgrade',
                  ],
       cmdclass = dict(build=sage_build,
                       build_cython=sage_build_cython,
