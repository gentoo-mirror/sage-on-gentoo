diff --git a/sage/libs/gap/saved_workspace.py b/sage/libs/gap/saved_workspace.py
index 3cb8fd3..2dd79fd 100644
--- a/sage/libs/gap/saved_workspace.py
+++ b/sage/libs/gap/saved_workspace.py
@@ -8,7 +8,6 @@ workspaces.
 
 import os
 import glob
-from sage.env import GAP_ROOT_DIR
 from sage.interfaces.gap import GAP_BINARY
 from sage.interfaces.gap_workspace import gap_workspace_file
 
@@ -32,8 +31,7 @@ def timestamp():
     """
     libgap_dir = os.path.dirname(__file__)
     libgap_files = glob.glob(os.path.join(libgap_dir, '*'))
-    gap_packages = glob.glob(os.path.join(GAP_ROOT_DIR, 'pkg', '*'))
-    files = libgap_files + [GAP_BINARY] + gap_packages
+    files = libgap_files + [GAP_BINARY]
     if len(files) == 0:
         print('Unable to find LibGAP files.')
         return float('inf')
diff --git a/sage/libs/gap/util.pyx b/sage/libs/gap/util.pyx
index 5ff6710..8d10a1d 100644
--- a/sage/libs/gap/util.pyx
+++ b/sage/libs/gap/util.pyx
@@ -25,7 +25,7 @@ from .element cimport *
 from sage.cpython.string import FS_ENCODING
 from sage.cpython.string cimport str_to_bytes, char_to_str
 from sage.interfaces.gap_workspace import prepare_workspace_dir
-from sage.env import SAGE_LOCAL, GAP_ROOT_DIR
+from sage.env import SAGE_LOCAL
 
 
 ############################################################################
@@ -157,44 +157,23 @@ cdef void gasman_callback():
 ### Initialization of libGAP ###############################################
 ############################################################################
 
-def _guess_gap_root():
+def gap_root():
     """
     Used as a fallback to determine gapdir if if GAP_ROOT_DIR is undefined or
     pointing to the wrong location.
 
     EXAMPLES::
 
-        sage: from sage.libs.gap.util import _guess_gap_root
-        sage: _guess_gap_root()
-        The gap-4.5.5.spkg (or later) seems to be not installed!
+        sage: from sage.libs.gap.util import gap_root
+        sage: gap_root()
         ...
     """
-    print('The gap-4.5.5.spkg (or later) seems to be not installed!')
     gap_sh = open(os.path.join(SAGE_LOCAL, 'bin', 'gap')).read().splitlines()
     gapdir = next(dir for dir in gap_sh if dir.strip().startswith('GAP_DIR'))
     gapdir = gapdir.split('"')[1]
     gapdir = gapdir.replace('$SAGE_LOCAL', SAGE_LOCAL)
     return gapdir
 
-def gap_root():
-    """
-    Find the location of the GAP root install which is stored in the gap
-    startup script.
-
-    EXAMPLES::
-
-        sage: from sage.libs.gap.util import gap_root
-        sage: gap_root()   # random output
-        '/home/vbraun/opt/sage-5.3.rc0/local/gap/latest'
-    """
-    try:
-        if os.path.exists(GAP_ROOT_DIR):
-            return GAP_ROOT_DIR
-    except TypeError:
-        raise RuntimeError('The GAP_ROOT_DIR environment variable is set to an invalid path: "{}"'.format(GAP_ROOT_DIR))
-
-    return _guess_gap_root()
-
 
 # To ensure that we call initialize_libgap only once.
 cdef bint _gap_is_initialized = False
